{"version":3,"sources":["components/Home.jsx","components/Agents/Cypher.jsx","components/Agents/Sova.jsx","components/Agents/Viper.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","main","position","width","height","backgroundColor","root","margin","Home","history","useHistory","classes","className","Card","CardActionArea","onClick","push","CardMedia","media","image","title","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","Link","to","text","color","Cypher","map","Sova","Viper","theme","createMuiTheme","palette","primary","secondary","light","contrastText","contrastThreshold","tonalOffset","App","ThemeProvider","AppBar","Toolbar","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0c7b320.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  main: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"calc(100% - 64px);\",\n    backgroundColor: \"#222\",\n  },\n  root: {\n    margin: \"2rem\",\n  },\n});\nexport default function Home() {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      <Card className={classes.root}>\n        <CardActionArea onClick={() => history.push(\"/cypher\")}>\n          <CardMedia\n            className={classes.media}\n            image='/static/images/cards/contemplative-reptile.jpg'\n            title='Contemplative Reptile'\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5' component='h2'>\n              Cypher\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button component={Link} to='/cypher/haven'>\n            HAVEN\n          </Button>\n          <Button component={Link} to='/cypher/bind'>\n            BIND\n          </Button>\n          <Button component={Link} to='/cypher/split'>\n            SPLIT\n          </Button>\n          <Button component={Link} to='/cypher/ascent'>\n            ASCENT\n          </Button>\n        </CardActions>\n      </Card>\n      <Card className={classes.root}>\n        <CardActionArea onClick={() => history.push(\"/sova\")}>\n          <CardMedia\n            className={classes.media}\n            image='/static/images/cards/contemplative-reptile.jpg'\n            title='Contemplative Reptile'\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5' component='h2'>\n              SOVA\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button component={Link} to='/cypher/haven'>\n            HAVEN\n          </Button>\n          <Button component={Link} to='/cypher/bind'>\n            BIND\n          </Button>\n          <Button component={Link} to='/cypher/split'>\n            SPLIT\n          </Button>\n          <Button component={Link} to='/cypher/ascent'>\n            ASCENT\n          </Button>\n        </CardActions>\n      </Card>\n      <Card className={classes.root}>\n        <CardActionArea onClick={() => history.push(\"/viper\")}>\n          <CardMedia\n            className={classes.media}\n            image='/static/images/cards/contemplative-reptile.jpg'\n            title='Contemplative Reptile'\n          />\n          <CardContent>\n            <Typography gutterBottom variant='h5' component='h2'>\n              VIPER\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button component={Link} to='/cypher/haven'>\n            HAVEN\n          </Button>\n          <Button component={Link} to='/cypher/bind'>\n            BIND\n          </Button>\n          <Button component={Link} to='/cypher/split'>\n            SPLIT\n          </Button>\n          <Button component={Link} to='/cypher/ascent'>\n            ASCENT\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  main: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"calc(100% - 64px);\",\n    backgroundColor: \"#222\",\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n\nexport default function Cypher({ map }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      <h1 className={classes.text}>Cypher</h1>\n      <h1 className={classes.text}>{map}</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  main: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"calc(100% - 64px);\",\n    backgroundColor: \"#222\",\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n\nexport default function Sova({map}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      <h1 className={classes.text}>Sova</h1>\n      <h1 className={classes.text}>{map}</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  main: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"calc(100% - 64px);\",\n    backgroundColor: \"#222\",\n  },\n  text: {\n    color: \"#fff\",\n  },\n});\n\nexport default function Viper({ map }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.main}>\n      <h1 className={classes.text}>Viper</h1>\n      <h1 className={classes.text}>{map}</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Button, ThemeProvider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core\";\n\nimport Home from \"./components/Home\";\nimport Cypher from \"./components/Agents/Cypher\";\nimport Sova from \"./components/Agents/Sova\";\nimport Viper from \"./components/Agents/Viper\";\n\nconst useStyles = makeStyles({\n  main: {\n    margin: \"0\",\n    backgroundColor: \"#222\",\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#1b262c\",\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#bbe1fa\",\n      main: \"#0f4c75\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#3282b8\",\n    },\n    contrastThreshold: 3,\n\n    tonalOffset: 0.2,\n  },\n});\n\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <Router>\n      <div className={classes.main}>\n        <ThemeProvider theme={theme}>\n          <AppBar position='static'>\n            <Toolbar>\n              <Button component={Link} to='/' color='inherit'>\n                Valorant Lineups\n              </Button>\n            </Toolbar>\n          </AppBar>\n        </ThemeProvider>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path='/cypher/haven'>\n            <Cypher map='haven' />\n          </Route>\n          <Route path='/sova/haven'>\n            <Sova map='haven' />\n          </Route>\n          <Route path='/viper/haven'>\n            <Viper map='haven' />\n          </Route>\n          <Route path='/cypher/bind'>\n            <Cypher map='bind' />\n          </Route>\n          <Route path='/sova/bind'>\n            <Sova map='bind' />\n          </Route>\n          <Route path='/viper/bind'>\n            <Viper map='bind' />\n          </Route>\n          <Route path='/cypher/split'>\n            <Cypher map='split' />\n          </Route>\n          <Route path='/sova/split'>\n            <Sova map='split' />\n          </Route>\n          <Route path='/viper/split'>\n            <Viper map='split' />\n          </Route>\n          <Route path='/cypher/ascent'>\n            <Cypher map='ascent' />\n          </Route>\n          <Route path='/sova/ascent'>\n            <Sova map='ascent' />\n          </Route>\n          <Route path='/viper/ascent'>\n            <Viper map='ascent' />\n          </Route>\n          <Route path='/cypher'>\n            <Cypher map='all' />\n          </Route>\n          <Route path='/sova'>\n            <Sova map='all' />\n          </Route>\n          <Route path='/viper'>\n            <Viper map='all' />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}